@model IEnumerable<RepTrackWeb.Models.Exercise.ExerciseListItemViewModel>

@{
    ViewData["Title"] = "Exercise Library";
    ViewData["ShowMobileOptimized"] = true;
}

<div class="container-fluid mobile-container">
    <div class="mobile-header">
        <button type="button" class="btn btn-link mobile-back-btn" onclick="history.back()">
            <i class="fas fa-arrow-left"></i>
        </button>
        <h2 class="mobile-title">Exercise Library</h2>
        <a asp-action="Create" class="btn btn-link text-white">
            <i class="fas fa-plus"></i>
        </a>
    </div>

    <div class="mobile-search-filters">
        <div class="search-container">
            <div class="input-group">
                <span class="input-group-text"><i class="fas fa-search"></i></span>
                <input type="text" id="searchExercise" class="form-control" placeholder="Search exercises...">
                <button class="btn btn-outline-secondary" type="button" id="clearSearch">
                    <i class="fas fa-times"></i>
                </button>
            </div>
        </div>
        <div class="filter-container">
            <select id="muscleGroupFilter" class="form-select">
                <option value="">All Muscle Groups</option>
                @foreach (var muscleGroup in Enum.GetValues(typeof(RepTrackDomain.Enums.MuscleGroup)))
                {
                    <option value="@muscleGroup">@muscleGroup</option>
                }
            </select>
        </div>
    </div>

    <div class="mobile-stats">
        <div class="stat-item">
            <span class="stat-number" id="exerciseCount">@Model.Count()</span>
            <span class="stat-label">Total Exercises</span>
        </div>
        <div class="stat-item">
            <span class="stat-number">@Model.Count(e => !e.IsSystemExercise)</span>
            <span class="stat-label">Custom</span>
        </div>
        <div class="stat-item">
            <span class="stat-number">@Model.Count(e => e.IsSystemExercise)</span>
            <span class="stat-label">Built-in</span>
        </div>
    </div>

    <div class="mobile-exercises" id="exerciseContainer">
        @foreach (var item in Model.OrderBy(e => e.Name))
        {
            <div class="mobile-exercise-card exercise-item"
                 data-muscle-group="@item.PrimaryMuscleGroupName"
                 data-name="@item.Name">
                <div class="exercise-info">
                    <div class="exercise-main">
                        <h3 class="exercise-name">@item.Name</h3>
                        <div class="exercise-meta">
                            <span class="muscle-group-badge badge bg-primary">@item.PrimaryMuscleGroupName</span>
                            @if (!item.IsSystemExercise)
                            {
                                <span class="badge bg-success">Custom</span>
                            }
                        </div>
                        @if (!string.IsNullOrEmpty(item.EquipmentRequired))
                        {
                            <div class="equipment-info">
                                <i class="fas fa-tools"></i> @item.EquipmentRequired
                            </div>
                        }
                    </div>
                </div>
                <div class="exercise-actions">
                    <a asp-action="Details" asp-route-id="@item.Id" class="btn btn-outline-primary btn-sm">
                        <i class="fas fa-eye"></i>
                    </a>
                    @if (!item.IsSystemExercise)
                    {
                        <a asp-action="Edit" asp-route-id="@item.Id" class="btn btn-outline-secondary btn-sm">
                            <i class="fas fa-edit"></i>
                        </a>
                    }
                </div>
            </div>
        }
    </div>

    <div id="noResultsMessage" class="mobile-empty-state" style="display: none;">
        <i class="fas fa-search fa-3x text-muted mb-3"></i>
        <h3>No exercises found</h3>
        <p class="text-muted">Try adjusting your search criteria or muscle group filter</p>
        <button type="button" class="btn btn-outline-primary" onclick="clearFilters()">
            Clear Filters
        </button>
    </div>

    <div class="mobile-floating-actions">
        <a asp-action="Create" class="fab-primary" title="Add Exercise">
            <i class="fas fa-plus"></i>
        </a>
    </div>
</div>

@section Styles {
    <style>
        .mobile-container {
            padding: 0;
            max-width: 100%;
            min-height: 100vh;
            background-color: #f8f9fa;
        }

        .mobile-header {
            display: flex;
            align-items: center;
            justify-content: space-between;
            padding: 15px;
            background: var(--bs-primary);
            color: white;
            position: sticky;
            top: 0;
            z-index: 100;
            box-shadow: 0 2px 4px rgba(0,0,0,0.1);
        }

        .mobile-back-btn {
            color: white;
            font-size: 1.2rem;
            padding: 0;
        }

        .mobile-title {
            margin: 0;
            font-size: 1.3rem;
            font-weight: 600;
            flex: 1;
            text-align: center;
        }

        .mobile-search-filters {
            padding: 15px;
            background: white;
            border-bottom: 1px solid #e0e0e0;
        }

        .search-container {
            margin-bottom: 10px;
        }

        .search-container .input-group-text {
            background: transparent;
            border-right: none;
            color: var(--bs-secondary);
        }

        .search-container .form-control {
            border-left: none;
            border-right: none;
            font-size: 1rem;
            padding: 12px 0;
        }

        .search-container .form-control:focus {
            box-shadow: none;
            border-color: var(--bs-primary);
        }

        .filter-container .form-select {
            font-size: 1rem;
            padding: 12px;
            border-radius: 8px;
        }

        .mobile-stats {
            display: grid;
            grid-template-columns: repeat(3, 1fr);
            gap: 15px;
            padding: 15px;
            background: white;
            border-bottom: 8px solid #f8f9fa;
        }

        .stat-item {
            text-align: center;
            padding: 10px;
            background: var(--bs-light);
            border-radius: 8px;
        }

        .stat-number {
            display: block;
            font-size: 1.5rem;
            font-weight: bold;
            color: var(--bs-primary);
        }

        .stat-label {
            display: block;
            font-size: 0.8rem;
            color: var(--bs-secondary);
            margin-top: 2px;
        }

        .mobile-exercises {
            padding: 10px;
        }

        .mobile-exercise-card {
            background: white;
            border-radius: 12px;
            margin-bottom: 10px;
            padding: 15px;
            box-shadow: 0 2px 8px rgba(0,0,0,0.08);
            display: flex;
            justify-content: space-between;
            align-items: center;
            transition: all 0.2s ease;
        }

        .mobile-exercise-card:hover {
            transform: translateY(-2px);
            box-shadow: 0 4px 12px rgba(0,0,0,0.12);
        }

        .exercise-info {
            flex: 1;
        }

        .exercise-name {
            margin: 0 0 8px 0;
            font-size: 1.1rem;
            font-weight: 600;
            color: var(--bs-dark);
            line-height: 1.3;
        }

        .exercise-meta {
            margin-bottom: 8px;
        }

        .muscle-group-badge {
            font-size: 0.75rem;
            margin-right: 5px;
        }

        .equipment-info {
            font-size: 0.9rem;
            color: var(--bs-secondary);
        }

        .equipment-info i {
            margin-right: 5px;
            color: var(--bs-primary);
        }

        .exercise-actions {
            display: flex;
            flex-direction: column;
            gap: 5px;
            margin-left: 15px;
        }

        .exercise-actions .btn {
            min-width: 40px;
            padding: 8px;
        }

        .mobile-empty-state {
            text-align: center;
            padding: 60px 20px;
            color: var(--bs-secondary);
        }

        .mobile-empty-state h3 {
            margin-bottom: 10px;
            color: var(--bs-dark);
        }

        .mobile-floating-actions {
            position: fixed;
            bottom: 20px;
            right: 20px;
            z-index: 1000;
        }

        .fab-primary {
            display: flex;
            align-items: center;
            justify-content: center;
            width: 56px;
            height: 56px;
            background: var(--bs-primary);
            color: white;
            border-radius: 50%;
            text-decoration: none;
            box-shadow: 0 4px 12px rgba(0,0,0,0.2);
            font-size: 1.3rem;
        }

        .fab-primary:hover {
            background: var(--bs-primary);
            color: white;
            transform: scale(1.05);
            box-shadow: 0 6px 16px rgba(0,0,0,0.3);
        }

        /* Add bottom padding to prevent FAB from covering content */
        body {
            padding-bottom: 100px;
        }

        /* Animation for filtered items */
        .exercise-item.hiding {
            opacity: 0;
            transform: scale(0.95);
            transition: all 0.2s ease;
        }

        .exercise-item.showing {
            opacity: 1;
            transform: scale(1);
            transition: all 0.2s ease;
        }

        /* Loading animation */
        .loading {
            text-align: center;
            padding: 20px;
            color: var(--bs-secondary);
        }        .loading i {
            animation: spin 2s linear infinite;
        }

        @@keyframes spin {
            0% { transform: rotate(0deg); }
            100% { transform: rotate(360deg); }
        }
    </style>
}

@section Scripts {
    <script>
        $(document).ready(function() {
            let filterTimeout;

            function filterExercises() {
                const searchTerm = $('#searchExercise').val().toLowerCase();
                const muscleGroup = $('#muscleGroupFilter').val();
                let visibleCount = 0;

                $('.exercise-item').each(function() {
                    const itemName = $(this).data('name').toLowerCase();
                    const itemMuscleGroup = $(this).data('muscle-group');

                    const matchesSearchTerm = searchTerm === '' || itemName.includes(searchTerm);
                    const matchesMuscleGroup = muscleGroup === '' || itemMuscleGroup === muscleGroup;
                    const shouldShow = matchesSearchTerm && matchesMuscleGroup;

                    if (shouldShow) {
                        $(this).removeClass('hiding').addClass('showing').show();
                        visibleCount++;
                    } else {
                        $(this).removeClass('showing').addClass('hiding');
                        setTimeout(() => {
                            if ($(this).hasClass('hiding')) {
                                $(this).hide();
                            }
                        }, 200);
                    }
                });

                // Update exercise count
                $('#exerciseCount').text(visibleCount);

                // Show/hide no results message
                if (visibleCount === 0) {
                    $('#noResultsMessage').fadeIn();
                } else {
                    $('#noResultsMessage').fadeOut();
                }
            }

            // Search input with debounce
            $('#searchExercise').on('input', function() {
                clearTimeout(filterTimeout);
                filterTimeout = setTimeout(filterExercises, 300);
            });

            // Muscle group filter
            $('#muscleGroupFilter').on('change', filterExercises);

            // Clear search
            $('#clearSearch').on('click', function() {
                $('#searchExercise').val('');
                $('#muscleGroupFilter').val('');
                filterExercises();
            });

            // Clear filters function (global)
            window.clearFilters = function() {
                $('#searchExercise').val('');
                $('#muscleGroupFilter').val('');
                filterExercises();
            };

            // Quick muscle group filter buttons (could be added in the future)
            $('.muscle-group-badge').on('click', function(e) {
                e.preventDefault();
                e.stopPropagation();
                const muscleGroup = $(this).text();
                $('#muscleGroupFilter').val(muscleGroup);
                filterExercises();
                
                // Scroll to top
                $('html, body').animate({
                    scrollTop: $('.mobile-search-filters').offset().top - 60
                }, 300);
            });

            // Touch optimization for exercise cards
            $('.mobile-exercise-card').on('touchstart', function() {
                $(this).addClass('touching');
            }).on('touchend', function() {
                $(this).removeClass('touching');
            });

            // Infinite scroll (placeholder for future enhancement)
            let isLoading = false;
            $(window).on('scroll', function() {
                if (isLoading) return;
                
                const scrollTop = $(window).scrollTop();
                const documentHeight = $(document).height();
                const windowHeight = $(window).height();
                
                // If user scrolled to bottom 200px, could load more exercises
                if (scrollTop + windowHeight > documentHeight - 200) {
                    // Future: Load more exercises via AJAX
                }
            });

            // Initialize
            filterExercises();
        });
    </script>
    <style>
        .mobile-exercise-card.touching {
            transform: scale(0.98);
            transition: transform 0.1s;
        }

        /* Smooth animations */
        .exercise-item {
            transition: all 0.3s ease;
        }

        /* Search highlight (future enhancement) */
        .search-highlight {
            background-color: yellow;
            font-weight: bold;
        }
    </style>
}