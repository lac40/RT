@model RepTrackWeb.Models.WorkoutTemplate.WorkoutTemplateIndexViewModel
@{
    ViewData["Title"] = "My Workout Templates";
}

<div class="container-fluid">
    <div class="row">
        <div class="col-12">
            <div class="d-flex justify-content-between align-items-center mb-4">
                <h2>My Workout Templates</h2>
                <a asp-action="Create" class="btn btn-primary">
                    <i class="fas fa-plus"></i> Create New Template
                </a>
            </div>

            <!-- Search and Filter Section -->
            <div class="card mb-4">
                <div class="card-body">
                    <form method="get" asp-action="Index">
                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label for="search">Search Templates</label>
                                    <input type="text" 
                                           class="form-control" 
                                           id="search" 
                                           name="search" 
                                           value="@Model.SearchTerm" 
                                           placeholder="Search by name or description...">
                                </div>
                            </div>
                            <div class="col-md-4">
                                <div class="form-group">
                                    <label for="workoutType">Workout Type</label>
                                    <select class="form-control" id="workoutType" name="workoutType">
                                        <option value="">All Types</option>
                                        @foreach (var type in Model.WorkoutTypes)
                                        {
                                            <option value="@type" selected="@(Model.SelectedWorkoutType == type)">
                                                @type.ToString()
                                            </option>
                                        }
                                    </select>
                                </div>
                            </div>
                            <div class="col-md-2">
                                <div class="form-group">
                                    <label>&nbsp;</label>
                                    <button type="submit" class="btn btn-secondary form-control">
                                        <i class="fas fa-search"></i> Search
                                    </button>
                                </div>
                            </div>
                        </div>
                    </form>
                </div>
            </div>

            <!-- Quick Links -->
            <div class="row mb-4">
                <div class="col-md-4">
                    <a asp-action="Public" class="btn btn-outline-info btn-block">
                        <i class="fas fa-globe"></i> Browse Public Templates
                    </a>
                </div>
                <div class="col-md-4">
                    <a asp-action="Popular" class="btn btn-outline-success btn-block">
                        <i class="fas fa-star"></i> Popular Templates
                    </a>
                </div>
                <div class="col-md-4">
                    <a asp-action="Create" class="btn btn-outline-primary btn-block">
                        <i class="fas fa-plus"></i> Create Template
                    </a>
                </div>
            </div>

            @if (Model.Templates.Any())
            {
                <!-- Templates Grid -->
                <div class="row">
                    @foreach (var template in Model.Templates)
                    {
                        <div class="col-lg-4 col-md-6 mb-4">
                            <div class="card h-100">
                                <div class="card-header d-flex justify-content-between align-items-center">
                                    <h5 class="card-title mb-0">@template.Name</h5>
                                    <span class="badge badge-@(GetWorkoutTypeBadgeClass(template.WorkoutType))">
                                        @template.WorkoutType
                                    </span>
                                </div>
                                <div class="card-body">
                                    @if (!string.IsNullOrEmpty(template.Description))
                                    {
                                        <p class="card-text">
                                            @(template.Description.Length > 100 ? 
                                              template.Description.Substring(0, 100) + "..." : 
                                              template.Description)
                                        </p>
                                    }
                                    
                                    <div class="mb-2">
                                        <small class="text-muted">
                                            <i class="fas fa-dumbbell"></i> @template.Exercises.Count exercises
                                        </small>
                                    </div>                                    @if (template.TagsList?.Any() == true)
                                    {
                                        <div class="mb-2">
                                            @foreach (var tag in template.TagsList.Take(3))
                                            {
                                                <span class="badge badge-secondary mr-1">@tag</span>
                                            }
                                            @if (template.TagsList.Count > 3)
                                            {
                                                <span class="text-muted">+@(template.TagsList.Count - 3) more</span>
                                            }
                                        </div>
                                    }

                                    <div class="mb-2">
                                        <small class="text-muted">
                                            Created: @template.CreatedAt.ToString("MMM dd, yyyy")
                                            @if (template.IsPublic)
                                            {
                                                <span class="badge badge-info ml-1">Public</span>
                                            }
                                        </small>
                                    </div>
                                </div>
                                <div class="card-footer">
                                    <div class="btn-group btn-group-sm w-100" role="group">
                                        <a asp-action="Details" 
                                           asp-route-id="@template.Id" 
                                           class="btn btn-outline-primary">
                                            <i class="fas fa-eye"></i> View
                                        </a>
                                        <form asp-action="UseTemplate" 
                                              asp-route-id="@template.Id" 
                                              method="post" 
                                              class="d-inline">
                                            @Html.AntiForgeryToken()
                                            <button type="submit" class="btn btn-success btn-sm">
                                                <i class="fas fa-play"></i> Use
                                            </button>
                                        </form>
                                        @if (template.CreatedByUserId == User.Identity.Name)
                                        {
                                            <a asp-action="Edit" 
                                               asp-route-id="@template.Id" 
                                               class="btn btn-outline-secondary">
                                                <i class="fas fa-edit"></i> Edit
                                            </a>
                                        }
                                    </div>
                                </div>
                            </div>
                        </div>
                    }
                </div>
            }
            else
            {
                <div class="text-center py-5">
                    <i class="fas fa-clipboard-list fa-3x text-muted mb-3"></i>
                    <h4 class="text-muted">No templates found</h4>
                    <p class="text-muted">
                        @if (!string.IsNullOrEmpty(Model.SearchTerm) || Model.SelectedWorkoutType.HasValue)
                        {
                            <text>Try adjusting your search criteria or </text>
                        }
                        <a asp-action="Create" class="text-primary">create your first template</a>
                    </p>
                </div>
            }
        </div>
    </div>
</div>

@functions {    string GetWorkoutTypeBadgeClass(RepTrackDomain.Enums.WorkoutType workoutType)
    {
        return workoutType switch
        {
            RepTrackDomain.Enums.WorkoutType.Push => "primary",
            RepTrackDomain.Enums.WorkoutType.Pull => "info",
            RepTrackDomain.Enums.WorkoutType.Legs => "warning",
            RepTrackDomain.Enums.WorkoutType.UpperBody => "success",
            RepTrackDomain.Enums.WorkoutType.LowerBody => "secondary",
            RepTrackDomain.Enums.WorkoutType.FullBody => "primary",
            RepTrackDomain.Enums.WorkoutType.Cardio => "success",
            RepTrackDomain.Enums.WorkoutType.Custom => "dark",
            _ => "dark"
        };
    }
}
