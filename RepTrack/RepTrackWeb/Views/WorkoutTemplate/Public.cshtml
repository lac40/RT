@model RepTrackWeb.Models.WorkoutTemplate.PublicTemplatesViewModel
@{
    ViewData["Title"] = "Public Workout Templates";
}

<div class="container-fluid">
    <div class="row">
        <div class="col-12">
            <div class="d-flex justify-content-between align-items-center mb-4">
                <h2>Public Workout Templates</h2>
                <div>
                    <a asp-action="Popular" class="btn btn-outline-success">
                        <i class="fas fa-star"></i> Popular Templates
                    </a>
                    <a asp-action="Index" class="btn btn-secondary">
                        <i class="fas fa-arrow-left"></i> My Templates
                    </a>
                </div>
            </div>

            <!-- Filter Section -->
            <div class="card mb-4">
                <div class="card-body">
                    <form method="get" asp-action="Public">
                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group mb-0">
                                    <label for="workoutType">Filter by Workout Type</label>
                                    <select class="form-control" id="workoutType" name="workoutType" onchange="this.form.submit()">
                                        <option value="">All Types</option>
                                        @foreach (var type in Model.WorkoutTypes)
                                        {
                                            <option value="@type" selected="@(Model.SelectedWorkoutType == type)">
                                                @type.ToString()
                                            </option>
                                        }
                                    </select>
                                </div>
                            </div>
                            <div class="col-md-6 d-flex align-items-end">
                                <div class="text-muted">
                                    <i class="fas fa-info-circle"></i>
                                    Browse templates created by the community and add them to your collection
                                </div>
                            </div>
                        </div>
                    </form>
                </div>
            </div>

            @if (Model.Templates.Any())
            {
                <!-- Templates Grid -->
                <div class="row">
                    @foreach (var template in Model.Templates)
                    {
                        <div class="col-lg-4 col-md-6 mb-4">
                            <div class="card h-100">
                                <div class="card-header d-flex justify-content-between align-items-center">
                                    <h5 class="card-title mb-0">@template.Name</h5>
                                    <div>
                                        <span class="badge badge-@(GetWorkoutTypeBadgeClass(template.WorkoutType))">
                                            @template.WorkoutType
                                        </span>
                                        <span class="badge badge-info ml-1">Public</span>
                                    </div>
                                </div>
                                <div class="card-body">
                                    @if (!string.IsNullOrEmpty(template.Description))
                                    {
                                        <p class="card-text">
                                            @(template.Description.Length > 100 ? 
                                              template.Description.Substring(0, 100) + "..." : 
                                              template.Description)
                                        </p>
                                    }
                                    
                                    <div class="mb-2">
                                        <small class="text-muted">
                                            <i class="fas fa-dumbbell"></i> @template.Exercises.Count exercises
                                        </small>
                                    </div>                                    @if (template.TagsList?.Any() == true)
                                    {
                                        <div class="mb-2">
                                            @foreach (var tag in template.TagsList.Take(3))
                                            {
                                                <span class="badge badge-secondary mr-1">@tag</span>
                                            }
                                            @if (template.TagsList.Count > 3)
                                            {
                                                <span class="text-muted">+@(template.TagsList.Count - 3) more</span>
                                            }
                                        </div>
                                    }<div class="mb-2">                                        <small class="text-muted">
                                            Created: @template.CreatedAt.ToString("MMM dd, yyyy")
                                            @if (!string.IsNullOrEmpty(template.CreatedByUserName))
                                            {
                                                <span><br />by @template.CreatedByUserName</span>
                                            }
                                        </small>
                                    </div>
                                </div>
                                <div class="card-footer">
                                    <div class="btn-group btn-group-sm w-100" role="group">
                                        <a asp-action="Details" 
                                           asp-route-id="@template.Id" 
                                           class="btn btn-outline-primary">
                                            <i class="fas fa-eye"></i> View
                                        </a>
                                        <form asp-action="UseTemplate" 
                                              asp-route-id="@template.Id" 
                                              method="post" 
                                              class="d-inline">
                                            @Html.AntiForgeryToken()
                                            <button type="submit" class="btn btn-success btn-sm">
                                                <i class="fas fa-play"></i> Use
                                            </button>
                                        </form>
                                        <form asp-action="Duplicate" 
                                              asp-route-id="@template.Id" 
                                              method="post" 
                                              class="d-inline"
                                              onsubmit="return promptForDuplicateName(this);">
                                            @Html.AntiForgeryToken()
                                            <input type="hidden" name="newName" value="@template.Name Copy">
                                            <button type="submit" class="btn btn-outline-secondary btn-sm">
                                                <i class="fas fa-copy"></i> Copy
                                            </button>
                                        </form>
                                    </div>
                                </div>
                            </div>
                        </div>
                    }
                </div>

                @if (Model.Templates.Count() >= 20)
                {
                    <div class="text-center mt-4">
                        <div class="alert alert-info">
                            <i class="fas fa-info-circle"></i>
                            Showing the first 20 public templates. Use filters to narrow down results.
                        </div>
                    </div>
                }
            }
            else
            {
                <div class="text-center py-5">
                    <i class="fas fa-globe fa-3x text-muted mb-3"></i>
                    <h4 class="text-muted">No public templates found</h4>
                    <p class="text-muted">
                        @if (Model.SelectedWorkoutType.HasValue)
                        {
                            <text>No public templates found for @Model.SelectedWorkoutType. Try selecting a different workout type or </text>
                        }
                        <a asp-action="Index" class="text-primary">create your own template</a> and make it public to share with the community.
                    </p>
                </div>
            }
        </div>
    </div>
</div>

@section Scripts {
    <script>
        function promptForDuplicateName(form) {
            const templateName = form.closest('.card').querySelector('.card-title').textContent.trim();
            const newName = prompt(`Enter a name for your copy of "${templateName}":`, templateName + ' Copy');
            
            if (newName === null) {
                return false; // User cancelled
            }
            
            if (newName.trim() === '') {
                alert('Please enter a valid name for the template.');
                return false;
            }
            
            form.querySelector('input[name="newName"]').value = newName.trim();
            return true;
        }
    </script>
}

@functions {
    string GetWorkoutTypeBadgeClass(RepTrackDomain.Enums.WorkoutType workoutType)
    {
        return workoutType switch
        {
            RepTrackDomain.Enums.WorkoutType.Push => "primary",
            RepTrackDomain.Enums.WorkoutType.Pull => "info",
            RepTrackDomain.Enums.WorkoutType.Legs => "warning",
            RepTrackDomain.Enums.WorkoutType.UpperBody => "success",
            RepTrackDomain.Enums.WorkoutType.LowerBody => "secondary",
            RepTrackDomain.Enums.WorkoutType.FullBody => "primary",
            RepTrackDomain.Enums.WorkoutType.Cardio => "success",
            RepTrackDomain.Enums.WorkoutType.Custom => "dark",
            _ => "dark"
        };
    }
}
