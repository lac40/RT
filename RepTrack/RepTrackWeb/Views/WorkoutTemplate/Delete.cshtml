@model RepTrackBusiness.DTOs.WorkoutTemplateDto
@{
    ViewData["Title"] = "Delete Template";
}

<div class="container-fluid">
    <div class="row justify-content-center">
        <div class="col-lg-8">
            <div class="card">
                <div class="card-header bg-danger text-white">
                    <h4 class="mb-0">
                        <i class="fas fa-exclamation-triangle"></i> Delete Workout Template
                    </h4>
                </div>
                <div class="card-body">
                    <div class="alert alert-warning">
                        <strong>Warning!</strong> This action cannot be undone. Deleting this template will permanently remove it and all associated data.
                    </div>

                    <h5>Are you sure you want to delete this workout template?</h5>
                    
                    <div class="card bg-light mt-3">
                        <div class="card-body">
                            <h6 class="card-title">
                                @Model.Name
                                <span class="badge badge-@(GetWorkoutTypeBadgeClass(Model.WorkoutType)) ml-2">
                                    @Model.WorkoutType
                                </span>
                            </h6>
                            
                            @if (!string.IsNullOrEmpty(Model.Description))
                            {
                                <p class="card-text">@Model.Description</p>
                            }
                            
                            <div class="row">
                                <div class="col-md-6">
                                    <small class="text-muted">
                                        <strong>Exercises:</strong> @Model.Exercises.Count<br>
                                        <strong>Created:</strong> @Model.CreatedAt.ToString("MMM dd, yyyy")<br>
                                        <strong>Visibility:</strong> @(Model.IsPublic ? "Public" : "Private")
                                    </small>
                                </div>
                                @if (Model.Tags?.Any() == true)
                                {
                                    <div class="col-md-6">
                                        <small class="text-muted">
                                            <strong>Tags:</strong><br>
                                            @foreach (var tag in Model.Tags)
                                            {
                                                <span class="badge badge-secondary mr-1">@tag</span>
                                            }
                                        </small>
                                    </div>
                                }
                            </div>
                        </div>
                    </div>

                    @if (Model.Exercises.Any())
                    {
                        <div class="mt-3">
                            <h6>Exercises that will be deleted:</h6>
                            <ul class="list-group list-group-flush">
                                @foreach (var exercise in Model.Exercises.OrderBy(e => e.Order).Take(10))
                                {
                                    <li class="list-group-item px-0 py-1">
                                        <small>@exercise.Order. @exercise.ExerciseName</small>
                                    </li>
                                }
                                @if (Model.Exercises.Count > 10)
                                {
                                    <li class="list-group-item px-0 py-1">
                                        <small class="text-muted">... and @(Model.Exercises.Count - 10) more exercises</small>
                                    </li>
                                }
                            </ul>
                        </div>
                    }
                </div>
                <div class="card-footer">
                    <form asp-action="DeleteConfirmed" method="post" class="d-inline">
                        @Html.AntiForgeryToken()
                        <input type="hidden" asp-for="Id">
                        <button type="submit" class="btn btn-danger">
                            <i class="fas fa-trash"></i> Yes, Delete Template
                        </button>
                    </form>
                    <a asp-action="Details" asp-route-id="@Model.Id" class="btn btn-secondary">
                        <i class="fas fa-arrow-left"></i> Cancel
                    </a>
                </div>
            </div>
        </div>
    </div>
</div>

@functions {
    string GetWorkoutTypeBadgeClass(RepTrackDomain.Enums.WorkoutType workoutType)    {
        return workoutType switch
        {
            RepTrackDomain.Enums.WorkoutType.Push => "primary",
            RepTrackDomain.Enums.WorkoutType.Pull => "info",
            RepTrackDomain.Enums.WorkoutType.Legs => "warning",
            RepTrackDomain.Enums.WorkoutType.UpperBody => "success",
            RepTrackDomain.Enums.WorkoutType.LowerBody => "secondary",
            RepTrackDomain.Enums.WorkoutType.FullBody => "primary",
            RepTrackDomain.Enums.WorkoutType.Cardio => "success",
            RepTrackDomain.Enums.WorkoutType.Custom => "dark",
            _ => "dark"
        };
    }
}
