@model RepTrackWeb.Models.WorkoutSession.WorkoutSessionDetailViewModel

@{
    ViewData["Title"] = "Workout Details";
    ViewData["ShowMobileOptimized"] = true;
}

<div class="container-fluid mobile-container">
    <div class="mobile-header">
        <button type="button" class="btn btn-link mobile-back-btn" onclick="history.back()">
            <i class="fas fa-arrow-left"></i>
        </button>
        <h2 class="mobile-title">@Model.SessionTypeName</h2>
        <div class="mobile-header-actions">
            <a asp-action="Edit" asp-route-id="@Model.Id" class="btn btn-link text-white">
                <i class="fas fa-edit"></i>
            </a>
        </div>
    </div>

    <div class="mobile-workout-info">
        <div class="workout-date">@Model.SessionDate.ToString("dddd, MMMM dd, yyyy")</div>
        <div class="workout-status">
            @if (Model.IsCompleted)
            {
                <span class="badge bg-success">Completed</span>
            }
            else
            {
                <span class="badge bg-warning">In Progress</span>
                <form asp-action="Complete" asp-route-id="@Model.Id" method="post" class="d-inline">
                    <button type="submit" class="btn btn-sm btn-success ms-2">Mark Complete</button>
                </form>
            }
        </div>
        @if (!string.IsNullOrEmpty(Model.Notes))
        {
            <div class="workout-notes">
                <strong>Notes:</strong> @Model.Notes
            </div>
        }
    </div>

    @if (Model.Exercises.Any())
    {
        <div class="mobile-exercises">
            @foreach (var exercise in Model.Exercises.OrderBy(e => e.Id))
            {
                <div class="mobile-exercise-card">
                    <div class="exercise-header">
                        <h3 class="exercise-name">@exercise.Name</h3>
                        <div class="exercise-actions">
                            <a asp-controller="ExerciseSet" asp-action="Add" 
                               asp-route-workoutExerciseId="@exercise.Id" 
                               asp-route-workoutId="@Model.Id" 
                               class="btn btn-primary btn-sm">
                                <i class="fas fa-plus"></i> Set
                            </a>
                        </div>
                    </div>
                    
                    @if (!string.IsNullOrEmpty(exercise.Notes))
                    {
                        <div class="exercise-notes">@exercise.Notes</div>
                    }

                    <div class="sets-list">
                        @if (exercise.Sets.Any())
                        {
                            foreach (var set in exercise.Sets.OrderBy(s => s.Id))
                            {
                                <div class="mobile-set-card @(set.IsCompleted ? "completed" : "")">
                                    <div class="set-info">
                                        <span class="set-type-badge badge bg-info">@set.TypeName</span>
                                        <div class="set-stats">
                                            <span class="weight">@set.Weight kg</span>
                                            <span class="separator">Ã—</span>
                                            <span class="reps">@set.Repetitions</span>
                                            <span class="rpe">@@ @set.RPE</span>
                                        </div>
                                    </div>
                                    <div class="set-actions">
                                        @if (!set.IsCompleted)
                                        {
                                            <form asp-controller="ExerciseSet" asp-action="Complete" 
                                                  asp-route-id="@set.Id" asp-route-workoutId="@Model.Id" 
                                                  method="post" class="d-inline">
                                                <button type="submit" class="btn btn-success btn-sm">
                                                    <i class="fas fa-check"></i>
                                                </button>
                                            </form>
                                        }
                                        else
                                        {
                                            <span class="completed-icon">
                                                <i class="fas fa-check-circle text-success"></i>
                                            </span>
                                        }
                                        <div class="dropdown">
                                            <button class="btn btn-outline-secondary btn-sm dropdown-toggle" 
                                                    type="button" data-bs-toggle="dropdown">
                                                <i class="fas fa-ellipsis-v"></i>
                                            </button>
                                            <ul class="dropdown-menu">
                                                <li>
                                                    <a class="dropdown-item" 
                                                       asp-controller="ExerciseSet" asp-action="Edit" 
                                                       asp-route-id="@set.Id" asp-route-workoutId="@Model.Id">
                                                        <i class="fas fa-edit"></i> Edit
                                                    </a>
                                                </li>
                                                <li>
                                                    <form asp-controller="ExerciseSet" asp-action="Delete" 
                                                          asp-route-id="@set.Id" asp-route-workoutId="@Model.Id" 
                                                          method="post" class="d-inline">
                                                        <button type="submit" class="dropdown-item text-danger" 
                                                                onclick="return confirm('Delete this set?')">
                                                            <i class="fas fa-trash"></i> Delete
                                                        </button>
                                                    </form>
                                                </li>
                                            </ul>
                                        </div>
                                    </div>
                                </div>
                            }
                        }
                        else
                        {
                            <div class="no-sets-message">
                                <p class="text-muted">No sets recorded yet</p>
                            </div>
                        }
                    </div>
                </div>
            }
        </div>
    }
    else
    {
        <div class="mobile-empty-state">
            <i class="fas fa-dumbbell fa-3x text-muted mb-3"></i>
            <h3>No Exercises Added</h3>
            <p class="text-muted">Start adding exercises to build your workout</p>
            <a asp-controller="WorkoutExercise" asp-action="Add" asp-route-workoutId="@Model.Id" 
               class="btn btn-primary">Add First Exercise</a>
        </div>
    }

    <div class="mobile-floating-actions">
        <a asp-controller="WorkoutExercise" asp-action="Add" asp-route-workoutId="@Model.Id" 
           class="fab-primary" title="Add Exercise">
            <i class="fas fa-plus"></i>
        </a>
    </div>
</div>

@section Styles {
    <style>
        .mobile-container {
            padding: 0;
            max-width: 100%;
            min-height: 100vh;
            background-color: #f8f9fa;
        }

        .mobile-header {
            display: flex;
            align-items: center;
            justify-content: space-between;
            padding: 15px;
            background: var(--bs-primary);
            color: white;
            position: sticky;
            top: 0;
            z-index: 100;
            box-shadow: 0 2px 4px rgba(0,0,0,0.1);
        }

        .mobile-back-btn {
            color: white;
            font-size: 1.2rem;
            padding: 0;
        }

        .mobile-title {
            margin: 0;
            font-size: 1.3rem;
            font-weight: 600;
            flex: 1;
            text-align: center;
        }

        .mobile-header-actions {
            min-width: 40px;
            text-align: right;
        }

        .mobile-workout-info {
            padding: 15px;
            background: white;
            border-bottom: 1px solid #e0e0e0;
        }

        .workout-date {
            font-size: 1.1rem;
            font-weight: 600;
            color: var(--bs-dark);
            margin-bottom: 8px;
        }

        .workout-status {
            display: flex;
            align-items: center;
            margin-bottom: 10px;
        }

        .workout-notes {
            font-size: 0.95rem;
            color: var(--bs-secondary);
            line-height: 1.4;
        }

        .mobile-exercises {
            padding: 10px;
        }

        .mobile-exercise-card {
            background: white;
            border-radius: 12px;
            margin-bottom: 15px;
            box-shadow: 0 2px 8px rgba(0,0,0,0.08);
            overflow: hidden;
        }

        .exercise-header {
            padding: 15px;
            background: var(--bs-light);
            border-bottom: 1px solid #e0e0e0;
            display: flex;
            justify-content: space-between;
            align-items: center;
        }

        .exercise-name {
            margin: 0;
            font-size: 1.1rem;
            font-weight: 600;
            color: var(--bs-dark);
        }

        .exercise-notes {
            padding: 10px 15px;
            font-size: 0.9rem;
            color: var(--bs-secondary);
            background: #f8f9fa;
            border-bottom: 1px solid #e0e0e0;
        }

        .sets-list {
            padding: 10px;
        }

        .mobile-set-card {
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding: 12px;
            margin-bottom: 8px;
            background: var(--bs-light);
            border-radius: 8px;
            border-left: 4px solid var(--bs-primary);
        }

        .mobile-set-card.completed {
            border-left-color: var(--bs-success);
            background: #d4edda;
        }

        .set-info {
            display: flex;
            align-items: center;
            gap: 10px;
        }

        .set-type-badge {
            font-size: 0.7rem;
            padding: 0.25rem 0.5rem;
        }

        .set-stats {
            display: flex;
            align-items: center;
            gap: 5px;
            font-weight: 600;
        }

        .weight {
            color: var(--bs-primary);
        }

        .separator {
            color: var(--bs-secondary);
        }

        .reps {
            color: var(--bs-success);
        }

        .rpe {
            color: var(--bs-warning);
            font-size: 0.9rem;
        }

        .set-actions {
            display: flex;
            align-items: center;
            gap: 8px;
        }

        .completed-icon {
            font-size: 1.2rem;
        }

        .no-sets-message {
            text-align: center;
            padding: 20px;
            color: var(--bs-secondary);
        }

        .mobile-empty-state {
            text-align: center;
            padding: 60px 20px;
            color: var(--bs-secondary);
        }

        .mobile-empty-state h3 {
            margin-bottom: 10px;
            color: var(--bs-dark);
        }

        .mobile-floating-actions {
            position: fixed;
            bottom: 20px;
            right: 20px;
            z-index: 1000;
        }

        .fab-primary {
            display: flex;
            align-items: center;
            justify-content: center;
            width: 56px;
            height: 56px;
            background: var(--bs-primary);
            color: white;
            border-radius: 50%;
            text-decoration: none;
            box-shadow: 0 4px 12px rgba(0,0,0,0.2);
            font-size: 1.3rem;
        }

        .fab-primary:hover {
            background: var(--bs-primary);
            color: white;
            transform: scale(1.05);
            box-shadow: 0 6px 16px rgba(0,0,0,0.3);
        }

        /* Add bottom padding to prevent FAB from covering content */
        body {
            padding-bottom: 100px;
        }

        /* Optimize dropdown for mobile */
        .dropdown-menu {
            min-width: 140px;
        }

        .dropdown-item {
            padding: 10px 15px;
            font-size: 0.9rem;
        }

        .dropdown-item i {
            width: 16px;
            margin-right: 8px;
        }
    </style>
}

@section Scripts {
    <script>
        $(document).ready(function() {
            // Auto-hide success messages after 3 seconds
            setTimeout(function() {
                $('.alert').fadeOut();
            }, 3000);

            // Smooth scroll to last added set
            if (window.location.hash) {
                $('html, body').animate({
                    scrollTop: $(window.location.hash).offset().top - 80
                }, 500);
            }

            // Optimized touch interactions
            $('.mobile-set-card').on('touchstart', function() {
                $(this).addClass('touching');
            }).on('touchend', function() {
                $(this).removeClass('touching');
            });

            // Swipe-to-complete gesture for sets
            let startX, currentX;
            $('.mobile-set-card:not(.completed)').on('touchstart', function(e) {
                startX = e.originalEvent.touches[0].clientX;
            }).on('touchmove', function(e) {
                if (!startX) return;
                currentX = e.originalEvent.touches[0].clientX;
                const diffX = currentX - startX;
                
                if (diffX > 50) {
                    $(this).addClass('swipe-complete');
                } else {
                    $(this).removeClass('swipe-complete');
                }
            }).on('touchend', function() {
                if ($(this).hasClass('swipe-complete')) {
                    // Trigger complete action
                    $(this).find('form[action*="Complete"] button').click();
                }
                $(this).removeClass('swipe-complete');
                startX = null;
            });
        });
    </script>
    <style>
        .mobile-set-card.touching {
            transform: scale(0.98);
            transition: transform 0.1s;
        }

        .mobile-set-card.swipe-complete {
            background: #d4edda !important;
            transform: translateX(10px);
            transition: all 0.2s;
        }
    </style>
}
